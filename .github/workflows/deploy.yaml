name: Deploy to VM Broo

on:
  push:
    branches:
      - master  # Adjust this to your deployment branch

jobs:
  build-and-upload-to-docker-hub:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image (no cache)
        uses: docker/build-push-action@v4
        with:
          push: true
          tags: indrafajar/pelanggaran-be:latest  # Update this
          no-cache: true
    
  deploy-vm:
    runs-on: ubuntu-latest
    needs: build-and-upload-to-docker-hub
    steps:
      - name: Deploy to VM
        env:
          HOST: ${{ secrets.VM_HOST }}  # Update with your VM IP
          USER: ${{ secrets.VM_USERNAME }}
          PASSWORD: ${{ secrets.VM_PASSWORD }}
        run: |
          sshpass -p "${PASSWORD}" ssh -o StrictHostKeyChecking=no $USER@$HOST << 'EOF'
            docker pull indrafajar/pelanggaran-be:latest
            if [ "$(docker ps -q -f name=pelanggaran-run)" ]; then
              docker stop pelanggaran-run
            fi
            if [ "$(docker ps -aq -f name=pelanggaran-run)" ]; then
              docker rm pelanggaran-run
            fi            
            if [ "$(docker ps -q -f name=pelanggaran-run-demo)" ]; then
              docker stop pelanggaran-run-demo
            fi
            if [ "$(docker ps -aq -f name=pelanggaran-run-demo)" ]; then
              docker rm pelanggaran-run-demo
            fi            
            docker run -d --name pelanggaran-run-demo --restart unless-stopped --network my-app -p 6000:3000 indrafajar/pelanggaran-be:latest
            docker run -d --name pelanggaran-run --restart unless-stopped --network my-app -p 4000:3000 indrafajar/pelanggaran-be:latest
            docker cp ~/pelanggaran-be/.env pelanggaran-run:/app/
            docker cp ~/pelanggaran-be-demo/.env pelanggaran-run-demo:/app/
            docker restart pelanggaran-run
            docker restart pelanggaran-run-demo
            docker image prune -f
          EOF